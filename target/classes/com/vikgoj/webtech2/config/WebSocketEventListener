package com.vikgoj.webtech2.config;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.context.event.EventListener;
import org.springframework.messaging.simp.SimpMessageSendingOperations;
import org.springframework.messaging.simp.stomp.StompHeaderAccessor;
import org.springframework.stereotype.Component;
import org.springframework.web.socket.messaging.SessionDisconnectEvent;

@Component
@RequiredArgsConstructor
@Slf4j

public class WebSocketEventListener {

    private final SimpMessageSendingOperations messageTemplate;

    //informs that user has left the chat
    @EventListener //listen to Event
    public void handleWebSocketDisconnectListener (
        SessionDisconnectEvent event
    ) {
        // get message from sessiondisconnect event
        StompHeaderAccessor headerAccessor = StompHeaderAccessor.wrap(event.getMessage());


        String username =(String) headerAccessor.getSessionAttributes().get("username");

        if (username != null) {
            log.info("User disconnected {}", username);
            var chatMessage = ChatMessage.builder()
                    .type(MessageType.LEAVE) //cuz user left the chatp
                    .sender(username)
                    .build();
            messageTemplate.convertAndSend("/topic/public",chatMessage); // topic-public
            // is q/channel that every user is listening on-> we inform every usser that this user has left the chat

        }
    }


}
